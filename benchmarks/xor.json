{
  "epochs": 90,
  "iteracoes": 10000,
  "taxa_aprendizado": 0.01,
  "runs": 10,
  "runs_data": [
    {
      "last_error": 0.00031598689109542936,
      "precisao": 1,
      "positivos": 200,
      "negativos": 0
    },
    {
      "last_error": 0.00033086915505730024,
      "precisao": 1,
      "positivos": 200,
      "negativos": 0
    },
    {
      "last_error": 0.0003736954075706802,
      "precisao": 1,
      "positivos": 200,
      "negativos": 0
    },
    {
      "last_error": 0.00024860067565984266,
      "precisao": 1,
      "positivos": 200,
      "negativos": 0
    },
    {
      "last_error": 0.00040247729825628175,
      "precisao": 1,
      "positivos": 200,
      "negativos": 0
    },
    {
      "last_error": 0.000370735103908716,
      "precisao": 1,
      "positivos": 200,
      "negativos": 0
    },
    {
      "last_error": 0.0002990111522158753,
      "precisao": 1,
      "positivos": 200,
      "negativos": 0
    },
    {
      "last_error": 0.00024457826686051536,
      "precisao": 1,
      "positivos": 200,
      "negativos": 0
    },
    {
      "last_error": 0.0004747947162990177,
      "precisao": 1,
      "positivos": 200,
      "negativos": 0
    },
    {
      "last_error": 0.00032884243312121373,
      "precisao": 1,
      "positivos": 200,
      "negativos": 0
    }
  ],
  "runs_avg": {
    "last_error": 0.0003389591100044872,
    "precisao": 1,
    "positivos": 200,
    "negativos": 0
  },
  "layers": 3,
  "neurons_per_layer": [
    3,
    4,
    1
  ],
  "bias_type": "as-input-neuron",
  "activation_function": "activation_function(input) {\r\n        return 1.0 / (1.0 + Math.exp(-input));\r\n    }",
  "activation_function_derivative": "Ï†_derivative(input) {\r\n        return Math.exp(-input) / Math.pow(1 + Math.exp(-input), 2);\r\n    }",
  "input_function": "input_function(inputs) {\r\n        let sum = 0;\r\n        for (const { value, origin } of inputs) {\r\n            // Each unit j first computes a weighted sum of its inputs:\r\n            sum += value * findLinkWeight(origin, this);\r\n        }\r\n        return sum;\r\n    }"
}